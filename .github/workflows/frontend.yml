name: frontend

on:
  push:
    branches: [ main ]
    paths: [ "Bloom-Frontend/**", ".github/workflows/frontend.yml" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/bloom-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (frontend)
        uses: docker/build-push-action@v6
        with:
          context: ./Bloom-Frontend
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # If Vite: leave BUILD_DIR=dist (default). If CRA: set BUILD_DIR=build.
          build-args: |
            BUILD_DIR=${{ vars.FRONTEND_BUILD_DIR || 'dist' }}
            VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL || secrets.VITE_API_BASE_URL }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 (pull & restart service)
        uses: appleboy/ssh-action@v1.2.0
        env:
          GH_OWNER: ${{ github.repository_owner }}
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/bloom-frontend
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # omit "port" to use default 22, or set: port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            set -euo pipefail
            cd "${{ secrets.COMPOSE_DIR || '/opt/bloom' }}"

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${GH_OWNER}" --password-stdin

            # Pull the latest image and restart the right service
            # Update the service name if your docker-compose.yml uses e.g. "frontend" instead of "nginx"
            docker compose pull frontend || docker compose pull nginx

            # Prefer restarting the actual frontend service name.
            if docker compose ps frontend >/dev/null 2>&1; then
              docker compose up -d frontend
            else
              docker compose up -d nginx
            fi

            # Optional: prune old images
            docker image prune -f --filter "until=168h"
